###############################################################################
#### Config file for scan creation
#
#### See: https://wiki.python.org/moin/ConfigParserExamples
####      https://docs.python.org/2/library/configparser.html
#
###############################################################################
### Fields described in order below.
###
### Run the command './chain.py -a info' to get a listing of folder names,
### scanner names, policy names, and tag names.
###
### These all print out in the form of dictionaries, with the ID or UUID as the
### value and the name as the key. Use the key (or name) of these below in your
### scan definition. This of course assumes that folder, scanners, policies and
### tags have already been created in IO. Examples are below you can use as
### templates.
#
#   - folder name
#   - scanner or scanner group name
#   - scan policy name
#   - launch frequency (should always be ON_DEMAND) as chain.py runs manually
#     or via a cron job
#   - comma-delimited list of email addresses to send scan completion emails
#     to (optional)
#   - scan description (optional)
#   - scan name (must be unique)
#   - comma-delimited list of scan targets (can use IP's, CIDR subnet
#     notation, or both)
#   - One or more tag name:value pairs, comma-delimited. If tag name is
#     "Office" and the tag value is "London", the pair is "Office:London". For
#     multiple tag name:value pairs, the format would be:
#
#         Office:London,Office:Berlin,Servers:Mail
#
#     There should be no spaces before/after the colons and commas, however
#     the code will remove any that are added by mistake. Spaces in the tag
#     name or value is OK. For example, these tag name:value pairs are
#     legitimate:
#
#         Office:New York,Windows Hosts:Mail Servers
#
### NOTE: At least one of scan_targets and tag_target_pair must be declared,
#         or both.
###############################################################################
#
# Example 1:
#             [Scan1]
#             folder_name = Adhoc Scans
#             scanner_name = Datacenter Scanner Group
#             policy_name = Host Discovery Scan
#             launch = ON_DEMAND
#             email = infosec@acme.com
#             description = Scan created by the chain.py script
#             scan_name = Discovery Scan: 10.1.1.1 and 10.2.2.2
#             scan_targets = 10.1.1.1,10.2.2.2
#             tag_target_pair =
#
# Example 2:
#             [Scan2]
#             folder_name = Adhoc Scans
#             scanner_name = LONSCANNER12
#             policy_name = Host Discovery Scan
#             launch = ON_DEMAND
#             email = infosec@acme.com
#             description = Scan created by the chain.py script
#             scan_name = Discovery Scan: London Office
#             scan_targets =
#             tag_target_pair = Office:London
#
# Example 3:
#             [Scan3]
#             folder_name = Adhoc Scans
#             scanner_name = LONSCANNER12
#             policy_name = Internal Safe Scan
#             launch = ON_DEMAND
#             email = infosec@acme.com,server_team@acme.com
#             description = Scan created by the chain.py script
#             scan_name = Vuln Scan: London and Berlin Offices, and 10.1.1.1/32
#             scan_targets = 10.1.1.1/32
#             tag_target_pair = Office:London,Office:Berlin
###############################################################################

[Scan1]

[Scan2]

#[Scan3]

#[Scan4]

#[Scan5]
