############################################################################
#### Logging configuration file
############################################################################
[loggers]
keys=root,info,create,delete,run

[handlers]
keys=stream_handler,file_handler,rotating_file_handler

[formatters]
keys=formatter_stream,formatter_file_info,formatter_file_create-delete-run

[logger_root]
level=INFO
handlers=stream_handler

[logger_info]
level=INFO
handlers=file_handler
propogate=0
qualname=info

[logger_create]
level=INFO
handlers=rotating_file_handler
propogate=0
qualname=create

[logger_delete]
level=INFO
handlers=rotating_file_handler
propogate=0
qualname=delete

[logger_run]
level=INFO
handlers=rotating_file_handler
propogate=0
qualname=run

[handler_stream_handler]
class=StreamHandler
level=INFO
formatter=formatter_stream
args=(sys.stdout,)

[handler_file_handler]
class=FileHandler
level=INFO
formatter=formatter_file_info
# write to log.info in write mode. Note that log gets cleared when
# create/run/delete scripts execute and log to log.chain.
# This is fine as the info data is mutable.
args=('./logs/log.info', 'w')

[handler_rotating_file_handler]
class=handlers.RotatingFileHandler
level=INFO
formatter=formatter_file_create-delete-run
# write to log.chain in append mode, maxBytes=100000, backupCount=5,
# encoding=None delay=False
args=('./logs/log.chain', 'a', 100000, 5, None, False)

[formatter_formatter_stream]
# Add a line return so STDOUT is more easily read
format=
 %(message)s

[formatter_formatter_file_info]
format=%(asctime)s :: %(name)s.py :: %(levelname)-4s :: %(message)s

[formatter_formatter_file_create-delete-run]
format=%(asctime)s :: %(name)s.py :: %(levelname)-4s :: %(message)s
